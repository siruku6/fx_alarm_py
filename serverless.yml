# For full config options, check the docs:
#    docs.serverless.com
# https://www.serverless.com/framework/docs/
# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/

service: py-fx
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-api-gateway-throttling

  # Following two plugins are for Request Validation
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation

custom:
  prefix: ${self:service}-${self:provider.stage}
  config:
    default: ${file(./config/default.yml)}
    stages:
      dev: ${file(./config/stages/dev.yml)}
      production: ${file(./config/stages/production.yml)}
  # INFO: plugin - serverless-api-gateway-throttling
  apiGatewayThrottling:
    maxRequestsPerSecond: 10
    maxConcurrentRequests: 5

provider:
  apiGateway:
    shouldStartNameWithService: true
    # Optional usage plan configuration
    usagePlan:
      quota:
        limit: 30
        offset: 0 # ApiGatewayUsagePlan - Usage Plan quota offset must be zero in the DAY period
        period: DAY
      throttle:
        burstLimit: 20
        rateLimit: 10
  endpointType: regional
  logRetentionInDays: 30
  memorySize: 512
  name: aws
  region: us-east-2
  # INFO: refer to iamRoleStatements
  #   なるべくserverless frameworkのみで完結できるよう、使用するroleはiamRoleStatementsで定義した
  # role: arn:aws:iam::${self:custom.config.default.AWS_ACCOUNT_ID}:role/service-role/lambda_for_trade
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  timeout: 20
  versionFunctions: false

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements: ${file(./serverless_resources/iam_role_statements.yml)}

# you can add packaging information here
package:
  exclude:
    - ./**
  # artifact: tmp/zips/app/fx_archive.zip
  # Create an individual zip-file for each function
  # individually: true # default is `false`
  include:
    - main.py
    - models/**
  # INFO: 'excludeDevDependencies: true' => ignore modules in package.json devDependencies
  excludeDevDependencies: false

functions:
  tradehist: ${file(./serverless_resources/function_tradehist.yml)}
  indicator_names: ${file(./serverless_resources/function_indicator_names.yml)}

resources:
  Resources:
    # DynamoDBテーブル構築
    DynamoDbTable: ${file(./serverless_resources/dynamodb.yml)}

    # INFO: function に disableLogs: true を設定した場合はこれを有効にする
    # TradehistLogGroup:
    #   Type: AWS::Logs::LogGroup
    #   Properties:
    #     LogGroupName: /aws/lambda/${self:functions.tradehist.name}
    #     RetentionInDays: 30

    # API Gatewayのリクエストの検証有効化
    noParameter:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: 'no-parameter'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: false
        ValidateRequestParameters: false
    onlyStringParameters:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: 'only-string-parameters'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: false
        ValidateRequestParameters: true
