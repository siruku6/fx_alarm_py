# For full config options, check the docs:
#    docs.serverless.com
# https://www.serverless.com/framework/docs/
# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/

service: py-fx
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  prefix: hoge
  # prefix: ${self:service}-${self:provider.stage}
  config:
    default: ${file(./config/default.yml)}
    stages:
      dev: ${file(./config/stages/dev.yml)}
      production: ${file(./config/stages/production.yml)}

provider:
  endpointType: regional
  logRetentionInDays: 30
  memorySize: 128
  name: aws
  region: us-east-2
  role: ${self:custom.config.default.tradingLambdaRole}
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  timeout: 30
  versionFunctions: false
  # Optional usage plan configuration
  # usagePlan:
  #   quota:
  #     limit: 5000
  #     offset: 2
  #     period: MONTH
  #   throttle:
  #     burstLimit: 200
  #     rateLimit: 100

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can add packaging information here
package:
  exclude:
    - log/**
    - tests/**
    - tmp/**
    - beta_cord.py
    - LICENSE
    - ./*.ini
    - ./*.sh
    - ./*.txt
    - ./*.md
  # artifact: tmp/zips/app/fx_archive.zip
  # individually: true
  # include:
  #   - handler.py
  #   - models/**
  # INFO: 'excludeDevDependencies: true' => ignore modules in package.json devDependencies
  excludeDevDependencies: false

functions:
  hello:
    description: testing serverless framework
    handler: handler.hello
    name: ${self:custom.prefix}_dump
    layers: ${self:custom.config.default.layers}
    # The following are a few example events you can configure
    # NOTE: Please make sure to change your handler code to work with those events
    # Check the event documentation for details
    # events:
    #   - http:
    #       path: users/create
    #       method: get
    #   - websocket: $connect
    #   - s3: ${env:BUCKET}
    #   - schedule: rate(10 minutes)
    #   - sns: greeter-topic
    #   - cloudwatchEvent:
    #       event:
    #         source:
    #           - "aws.ec2"
    #         detail-type:
    #           - "EC2 Instance State-change Notification"
    #         detail:
    #           state:
    #             - pending
    #   - cloudwatchLog: '/aws/lambda/hello'
    #   - cognitoUserPool:
    #       pool: MyUserPool
    #       trigger: PreSignUp

    # Define function environment variables here
    environment:
      GRANULARITY: H1
      OANDA_ENVIRONMENT: practice
      STOPLOSS_BUFFER: '0.000005'
      TZ: Asia/Tokyo
      UNITS: '10000'
      OANDA_ACCESS_TOKEN: ${self:custom.config.default.OANDA_ACCESS_TOKEN}
      OANDA_ACCOUNT_ID: ${self:custom.config.default.OANDA_ACCOUNT_ID}
      STAGE: ${self:custom.config.stages.${self:provider.stage}.test}
